name: Nightly Husker Schedule

on:
  schedule:
    # 2:00 AM America/Chicago (cover DST with two UTC times)
    - cron: '0 7 * * *'
    - cron: '0 8 * * *'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: fb-schedule-nebraska
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install scraper deps
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          python -m playwright install --with-deps chromium

      - name: Scrape latest schedule
        run: |
          python scripts/scrape_huskers.py
          test -s data/huskers_schedule.json && echo "Scrape ok" || (echo "Scrape produced no data"; exit 1)
          # Sanity check: ensure we have some games
          python - << 'PY'
          import json,sys
          d=json.load(open('data/huskers_schedule.json'))
          n=len(d.get('games',[]))
          print(f"games: {n}")
          sys.exit(0 if n>=3 else 2)
          PY

      - name: Normalize data
        run: |
          python scripts/normalize_schedule.py
          test -s data/huskers_schedule_normalized.json && echo "Normalize ok" || (echo "Normalize failed"; exit 1)

      - name: Generate stadium manifest
        run: |
          python scripts/generate_stadium_manifest.py
          test -s data/stadium_manifest.json && echo "Manifest ok" || (echo "Manifest failed"; exit 1)

      - name: Publish data to docs/data
        run: |
          mkdir -p docs/data
          cp -f data/huskers_schedule.json docs/data/huskers_schedule.json
          cp -f data/huskers_schedule_normalized.json docs/data/huskers_schedule_normalized.json
          cp -f data/stadium_manifest.json docs/data/stadium_manifest.json
          ls -l docs/data

      - name: Show what changed (debug)
        run: |
          echo "=== pwd ==="; pwd
          echo "=== branch ==="; git rev-parse --abbrev-ref HEAD
          echo "=== remotes ==="; git remote -v
          echo "=== data ==="; ls -la data || true
          echo "=== docs/data ==="; ls -la docs/data || true
          echo "=== git status (before add) ==="; git status --porcelain=v1

      - name: Commit & push updated files (explicit)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A data docs/data
          echo "=== git status (after add) ==="; git status --porcelain=v1
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: nightly schedule refresh"
            git push origin HEAD
          fi

      - name: List final repo state (debug)
        run: |
          echo "=== final data ==="; ls -la data || true
          echo "=== final docs/data ==="; ls -la docs/data || true
